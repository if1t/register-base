/*
üëã Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint.
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! üíñ
*/
module.exports = {
  root: true,
  env: {
    browser: true,
    es6: true,
    node: true,
    jasmine: true,
  },
  plugins: [
    'unused-imports',
    'jsdoc',
    'prefer-arrow',
    'log',
    'import',
    'rxjs',
    'prettier',
    'eqeqeq-fix',
    'simple-import-sort',
    '@microsoft/eslint-plugin-sdl',
    'xss',
    '@ngrx',
  ],
  overrides: [
    {
      files: ['*.ts'],
      parser: '@typescript-eslint/parser',
      parserOptions: {
        ecmaVersion: 2022,
        sourceType: 'module',
        project: true,
        EXPERIMENTAL_useProjectService: true,
      },
      extends: [
        'airbnb-base',
        'airbnb-typescript/base',
        'eslint:recommended',
        'prettier',
        'plugin:@typescript-eslint/recommended',
        'plugin:@typescript-eslint/recommended-requiring-type-checking',
        'plugin:prettier/recommended',
        'plugin:@angular-eslint/recommended',
        'plugin:unicorn/recommended',
        'plugin:sonarjs/recommended-legacy',
        'plugin:github/recommended',
        'plugin:etc/recommended',
        'plugin:no-unsanitized/DOM',
        'plugin:promise/recommended',
        'plugin:xss/recommended',
        'plugin:@ngrx/all',
      ],
      rules: {
        '@microsoft/sdl/no-angular-bypass-sanitizer': 'error',
        'xss/no-mixed-html': [
          'error',
          {
            encoders: ['utils.htmlEncode()', 'CSS.escape()', 'Number()'],
            unsafe: ['.html()'],
          },
        ],
        'xss/no-location-href-assign': 'error',
        'no-unsanitized/method': 'error',
        'no-unsanitized/property': 'error',
        '@angular-eslint/no-output-on-prefix': 'off',
        '@angular-eslint/component-selector': [
          'error',
          {
            type: 'element',
            style: 'kebab-case',
          },
        ],
        '@angular-eslint/directive-selector': [
          'error',
          {
            type: 'attribute',
            style: 'camelCase',
          },
        ],
        '@typescript-eslint/unbound-method': 'off',
        '@typescript-eslint/no-floating-promises': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        '@typescript-eslint/no-unsafe-return': 'off',
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-argument': 'off',
        '@typescript-eslint/no-explicit-any': 'off',
        '@typescript-eslint/no-unsafe-call': 'off',
        '@typescript-eslint/no-empty-function': 'error',
        '@typescript-eslint/restrict-template-expressions': [
          'warn',
          {
            allowNumber: true,
            allowBoolean: false,
            allowAny: false,
            allowNullish: false,
            allowRegExp: false,
          },
        ],
        '@typescript-eslint/explicit-module-boundary-types': [
          'warn',
          {
            allowArgumentsExplicitlyTypedAsAny: true,
            allowDirectConstAssertionInArrowFunctions: true,
            allowedNames: ['clearSStatuses', 'clearTypes'],
          },
        ],
        '@typescript-eslint/no-shadow': [
          'error',
          {
            hoist: 'all',
          },
        ],
        'no-shadow': 'off',
        '@typescript-eslint/no-unnecessary-type-assertion': ['error'],
        '@typescript-eslint/array-type': [
          'error',
          {
            default: 'array',
          },
        ],
        '@typescript-eslint/ban-ts-comment': 'error',
        '@typescript-eslint/no-throw-literal': 'off',
        '@typescript-eslint/only-throw-error': 'error',
        '@typescript-eslint/no-non-null-assertion': 'off',
        '@typescript-eslint/naming-convention': 'warn',
        '@typescript-eslint/no-unused-vars': 'off',
        '@typescript-eslint/no-unused-expressions': ['error', { allowTernary: true }],
        'unused-imports/no-unused-imports': 'error',
        'unused-imports/no-unused-vars': [
          'warn',
          { vars: 'all', varsIgnorePattern: '^_', args: 'after-used', argsIgnorePattern: '^_' },
        ],
        curly: ['error', 'all'],
        'arrow-body-style': 'error',
        'arrow-parens': ['error', 'always'],
        'brace-style': 'off',
        'import/no-deprecated': 'off',
        'jsdoc/check-alignment': 'error',
        'jsdoc/check-indentation': 'off',
        'jsdoc/tag-lines': [
          'error',
          'any',
          {
            startLines: 1,
          },
        ],
        'max-len': [
          'warn',
          {
            code: 140,
            tabWidth: 2,
          },
        ],
        'sort-imports': [
          'error',
          {
            ignoreDeclarationSort: true,
          },
        ],
        'rxjs/no-async-subscribe': 'error',
        'rxjs/no-ignored-observable': 'off',
        'rxjs/no-nested-subscribe': 'error',
        'rxjs/no-unbound-methods': 'error',
        'rxjs/throw-error': 'error',
        'rxjs/no-unsafe-takeuntil': [
          'error',
          {
            alias: ['untilDestroyed'],
            checkComplete: true,
            checkDecorators: ['Component'],
            checkDestroy: true,
          },
        ],
        'unicorn/consistent-function-scoping': 'off',
        'unicorn/no-negated-condition': 'error',
        'no-unused-vars': 'warn',
        'no-restricted-syntax': 'off',
        'no-param-reassign': ['error', { props: false }],
        'no-invalid-this': 'off',
        'no-underscore-dangle': 'off',
        'no-redeclare': 'off',
        'no-plusplus': ['error', { allowForLoopAfterthoughts: true }],
        'no-irregular-whitespace': ['warn', { skipComments: true }],
        'no-console': [
          'warn',
          {
            allow: [
              'warn',
              'dir',
              'timeLog',
              'assert',
              'clear',
              'count',
              'countReset',
              'group',
              'groupEnd',
              'table',
              'dirxml',
              'error',
              'groupCollapsed',
              'Console',
              'profile',
              'profileEnd',
              'timeStamp',
              'context',
            ],
          },
        ],
        'prettier/prettier': 'error',
        'github/no-then': 'off',
        'github/array-foreach': 'off',
        'etc/no-implicit-any-catch': 'off',
        'sonarjs/no-same-line-conditional': 'off',
        'sonarjs/prefer-immediate-return': 'off',
        'promise/catch-or-return': [
          'warn',
          {
            allowFinally: true,
          },
        ],
        'promise/always-return': [
          'error',
          {
            ignoreLastCallback: true,
          },
        ],
        'import/extensions': 'off',
        'import/no-unresolved': 'off',
        'import/order': 'off',
        'unicorn/prevent-abbreviations': 'off',
        'unicorn/no-null': 'off',
        'unicorn/filename-case': 'off',
        'unicorn/prefer-switch': 'off',
        'unicorn/prefer-add-event-listener': 'off',
        'unicorn/switch-case-braces': 'off',
        'unicorn/no-array-method-this-argument': 'off',
        'unicorn/no-object-as-default-parameter': 'off',
        'unicorn/no-array-reduce': 'warn',
        'unicorn/no-array-for-each': 'warn',
        'unicorn/prefer-array-some': 'warn',
        'unicorn/prefer-spread': 'warn',
        'unicorn/prefer-array-find': 'warn',
        'unicorn/prefer-array-flat': 'warn',
        'unicorn/prefer-array-flat-map': 'warn',
        'unicorn/prefer-array-index-of': 'warn',
        'unicorn/prefer-string-slice': 'warn',
        'unicorn/prefer-string-starts-ends-with': 'warn',
        'unicorn/prefer-string-trim-start-end': 'warn',
        'unicorn/require-array-join-separator': 'warn',
        'sonarjs/cognitive-complexity': ['error', 20],
        'max-lines': [
          'warn',
          {
            max: 750,
            skipBlankLines: true,
            skipComments: true,
          },
        ],
        'max-lines-per-function': [
          'warn',
          {
            max: 200,
            skipBlankLines: true,
            skipComments: true,
          },
        ],
        'class-methods-use-this': 'off',
        'max-classes-per-file': 'off',
        eqeqeq: ['error', 'always'],
        camelcase: 'off',
        'import/prefer-default-export': 'off',
        '@typescript-eslint/lines-between-class-members': 'off',
        'no-useless-return': 'off',
        'consistent-return': 'off',

        /** –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã–µ */
        'import/no-cycle': 'warn',
        'filenames/match-regex': 'warn',
        'prettier/prettier': 'warn',
        '@typescript-eslint/no-unnecessary-type-assertion': 'warn',
        '@ngrx/updater-explicit-return-type': 'warn',
        '@typescript-eslint/no-redundant-type-constituents': 'warn',
        '@typescript-eslint/no-duplicate-enum-values': 'warn',
        '@typescript-eslint/no-duplicate-type-constituents': 'warn',
        'sonarjs/function-return-type': 'warn',
        'sonarjs/no-dead-store': 'warn',

        /** –û—Ç–∫–ª—é—á–µ–Ω–Ω—ã–µ –Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏ –ø–æ–¥–Ω—è—Ç–∏–∏ –≤–µ—Ä—Å–∏–∏ Angular –∏ –ø–ª–∞–≥–∏–Ω–æ–≤ */
        'import/no-namespace': 'off',
        'unused-imports/no-unused-imports': 'off',
        'sort-imports': 'off',
        'prefer-destructuring': 'off',
        'unicorn/empty-brace-spaces': 'off',
        'unicorn/prefer-event-target': 'off',
        'unicorn/prefer-at': 'off',
        'unicorn/prefer-string-replace-all': 'off',
        'unicorn/prefer-dom-node-text-content': 'off',
        'unicorn/prefer-dom-node-remove': 'off',
        'eslint-comments/no-unused-disable': 'off',
        '@typescript-eslint/no-unsafe-enum-comparison': 'off',
        '@typescript-eslint/no-base-to-string': 'off',
        '@angular-eslint/no-output-native': 'off',
        'sonarjs/todo-tag': 'off',
        'sonarjs/unused-import': 'off',
        'sonarjs/different-types-comparison': 'off',
        'sonarjs/deprecation': 'off',
        'sonarjs/no-nested-assignment': 'off',
        'sonarjs/no-nested-functions': 'off',
        'sonarjs/no-selector-parameter': 'off',
        'sonarjs/no-unused-vars': 'off',
        'sonarjs/slow-regex': 'off',
        'sonarjs/updated-loop-counter': 'off',
        'sonarjs/reduce-initial-value': 'off',
        'sonarjs/use-type-alias': 'off',
        'sonarjs/no-redundant-optional': 'off',
        'sonarjs/concise-regex': 'off',
        'sonarjs/no-inverted-boolean-check': 'off',
        'sonarjs/class-name': 'off',
        'sonarjs/pseudo-random': 'off',
        'sonarjs/no-invariant-returns': 'off',
        'sonarjs/no-redundant-assignments': 'off',
        'sonarjs/public-static-readonly': 'off',
        'sonarjs/no-clear-text-protocols': 'off',
        'sonarjs/no-duplicate-in-composite': 'off',
        'sonarjs/prefer-regexp-exec': 'off',
        'sonarjs/no-hardcoded-ip': 'off',
        'sonarjs/regex-complexity': 'off',
        'sonarjs/single-character-alternation': 'off',
        'sonarjs/no-nested-conditional': 'off',
        'sonarjs/arguments-order': 'off',
        'sonarjs/anchor-precedence': 'off',
        'sonarjs/no-empty-group': 'off',
        'sonarjs/no-try-promise': 'off',
        'sonarjs/redundant-type-aliases': 'off',
      },
    },
    {
      files: ['*.html'],
      extends: [
        'prettier',
        'plugin:@angular-eslint/template/recommended',
        'plugin:@angular-eslint/template/accessibility',
      ],
      rules: {
        'max-len': ['error', { code: 140 }],

        /** –û—Ç–∫–ª—é—á–µ–Ω–Ω—ã–µ –Ω–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∏ –ø–æ–¥–Ω—è—Ç–∏–∏ –≤–µ—Ä—Å–∏–∏ Angular –∏ –ø–ª–∞–≥–∏–Ω–æ–≤ */
        '@angular-eslint/template/eqeqeq': 'off',
        '@angular-eslint/template/elements-content': 'off',
        '@angular-eslint/template/click-events-have-key-events': 'off',
        '@angular-eslint/template/interactive-supports-focus': 'off',
        '@angular-eslint/template/alt-text': 'off',
        '@angular-eslint/template/no-negated-async': 'off',
        '@angular-eslint/template/label-has-associated-control': 'off',
      },
    },
  ],
};
